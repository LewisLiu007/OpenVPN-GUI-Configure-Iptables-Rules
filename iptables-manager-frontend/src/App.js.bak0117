// src/App.js
// 主组件：包含用户、资源和允许规则的管理界面，并提交配置到后端。

import React, { useState } from 'react';
import { Container, Row, Col, Form, Button, Table, Alert } from 'react-bootstrap';
import axios from 'axios';

function App() {
    // 定义状态变量
    const [users, setUsers] = useState([]);
    const [resources, setResources] = useState([]);
    const [allowRules, setAllowRules] = useState([]);

    // 定义表单输入状态
    const [newUser, setNewUser] = useState({ username: '', user_ip: '' });
    const [newResource, setNewResource] = useState({ resource_name: '', resource_ip: '' });
    const [newRule, setNewRule] = useState({ username: '', resource_name: '' });

    // 状态变量用于显示消息
    const [message, setMessage] = useState({ type: '', text: '' });

    // 处理添加用户
    const addUser = () => {
        if (!newUser.username || !newUser.user_ip) {
            setMessage({ type: 'danger', text: '请填写完整的用户信息。' });
            return;
        }
        setUsers([...users, newUser]);
        setNewUser({ username: '', user_ip: '' });
        setMessage({ type: 'success', text: '用户已添加。' });
    };

    // 处理删除用户
    const deleteUser = (index) => {
        const updatedUsers = [...users];
        updatedUsers.splice(index, 1);
        setUsers(updatedUsers);
    };

    // 处理添加资源
    const addResource = () => {
        if (!newResource.resource_name || !newResource.resource_ip) {
            setMessage({ type: 'danger', text: '请填写完整的资源信息。' });
            return;
        }
        setResources([...resources, newResource]);
        setNewResource({ resource_name: '', resource_ip: '' });
        setMessage({ type: 'success', text: '资源已添加。' });
    };

    // 处理删除资源
    const deleteResource = (index) => {
        const updatedResources = [...resources];
        updatedResources.splice(index, 1);
        setResources(updatedResources);
    };

    // 处理添加允许规则
    const addRule = () => {
        if (!newRule.username || !newRule.resource_name) {
            setMessage({ type: 'danger', text: '请填写完整的允许规则。' });
            return;
        }
        // 检查用户和资源是否存在
        const userExists = users.find(user => user.username === newRule.username);
        const resourceExists = resources.find(resource => resource.resource_name === newRule.resource_name);
        if (!userExists || !resourceExists) {
            setMessage({ type: 'danger', text: '指定的用户或资源不存在。' });
            return;
        }
        setAllowRules([...allowRules, newRule]);
        setNewRule({ username: '', resource_name: '' });
        setMessage({ type: 'success', text: '允许规则已添加。' });
    };

    // 处理删除允许规则
    const deleteRule = (index) => {
        const updatedRules = [...allowRules];
        updatedRules.splice(index, 1);
        setAllowRules(updatedRules);
    };

    // 处理提交配置
    const submitConfig = () => {
        // 发送POST请求到后端API
        axios.post('http://192.168.164.177:5000/api/update-config', {
            users,
            resources,
            allow_rules: allowRules
        })
        .then(response => {
            if (response.data.success) {
                setMessage({ type: 'success', text: response.data.message });
            } else {
                setMessage({ type: 'danger', text: response.data.message });
            }
        })
        .catch(error => {
            console.error('提交配置时出错：', error);
            setMessage({ type: 'danger', text: '提交配置时出错。' });
        });
    };

    return (
        <Container>
            <h1 className="mt-4">Iptables 管理器</h1>

            {/* 显示消息 */}
            {message.text && <Alert variant={message.type} onClose={() => setMessage({ type: '', text: '' })} dismissible>{message.text}</Alert>}

            <Row className="mt-4">
                {/* 用户管理 */}
                <Col md={4}>
                    <h3>用户管理</h3>
                    <Form>
                        <Form.Group controlId="formUsername">
                            <Form.Label>用户名</Form.Label>
                            <Form.Control
                                type="text"
                                placeholder="输入用户名"
                                value={newUser.username}
                                onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}
                            />
                        </Form.Group>
                        <Form.Group controlId="formUserIP">
                            <Form.Label>用户IP</Form.Label>
                            <Form.Control
                                type="text"
                                placeholder="输入用户IP（例如10.18.164.4）"
                                value={newUser.user_ip}
                                onChange={(e) => setNewUser({ ...newUser, user_ip: e.target.value })}
                            />
                        </Form.Group>
                        <Button variant="primary" className="mt-2" onClick={addUser}>添加用户</Button>
                    </Form>

                    {/* 用户列表 */}
                    <h5 className="mt-4">当前用户</h5>
                    <Table striped bordered hover>
                        <thead>
                            <tr>
                                <th>用户名</th>
                                <th>用户IP</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            {users.map((user, index) => (
                                <tr key={index}>
                                    <td>{user.username}</td>
                                    <td>{user.user_ip}</td>
                                    <td><Button variant="danger" size="sm" onClick={() => deleteUser(index)}>删除</Button></td>
                                </tr>
                            ))}
                        </tbody>
                    </Table>
                </Col>

                {/* 资源管理 */}
                <Col md={4}>
                    <h3>资源管理</h3>
                    <Form>
                        <Form.Group controlId="formResourceName">
                            <Form.Label>资源名</Form.Label>
                            <Form.Control
                                type="text"
                                placeholder="输入资源名"
                                value={newResource.resource_name}
                                onChange={(e) => setNewResource({ ...newResource, resource_name: e.target.value })}
                            />
                        </Form.Group>
                        <Form.Group controlId="formResourceIP">
                            <Form.Label>资源IP</Form.Label>
                            <Form.Control
                                type="text"
                                placeholder="输入资源IP（例如192.168.100.1）"
                                value={newResource.resource_ip}
                                onChange={(e) => setNewResource({ ...newResource, resource_ip: e.target.value })}
                            />
                        </Form.Group>
                        <Button variant="primary" className="mt-2" onClick={addResource}>添加资源</Button>
                    </Form>

                    {/* 资源列表 */}
                    <h5 className="mt-4">当前资源</h5>
                    <Table striped bordered hover>
                        <thead>
                            <tr>
                                <th>资源名</th>
                                <th>资源IP</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            {resources.map((resource, index) => (
                                <tr key={index}>
                                    <td>{resource.resource_name}</td>
                                    <td>{resource.resource_ip}</td>
                                    <td><Button variant="danger" size="sm" onClick={() => deleteResource(index)}>删除</Button></td>
                                </tr>
                            ))}
                        </tbody>
                    </Table>
                </Col>

                {/* 允许规则管理 */}
                <Col md={4}>
                    <h3>允许规则管理</h3>
                    <Form>
                        <Form.Group controlId="formRuleUsername">
                            <Form.Label>用户名</Form.Label>
                            <Form.Control
                                as="select"
                                value={newRule.username}
                                onChange={(e) => setNewRule({ ...newRule, username: e.target.value })}
                            >
                                <option value="">选择用户</option>
                                {users.map((user, index) => (
                                    <option key={index} value={user.username}>{user.username}</option>
                                ))}
                            </Form.Control>
                        </Form.Group>
                        <Form.Group controlId="formRuleResource">
                            <Form.Label>资源名</Form.Label>
                            <Form.Control
                                as="select"
                                value={newRule.resource_name}
                                onChange={(e) => setNewRule({ ...newRule, resource_name: e.target.value })}
                            >
                                <option value="">选择资源</option>
                                {resources.map((resource, index) => (
                                    <option key={index} value={resource.resource_name}>{resource.resource_name}</option>
                                ))}
                            </Form.Control>
                        </Form.Group>
                        <Button variant="primary" className="mt-2" onClick={addRule}>添加允许规则</Button>
                    </Form>

                    {/* 允许规则列表 */}
                    <h5 className="mt-4">当前允许规则</h5>
                    <Table striped bordered hover>
                        <thead>
                            <tr>
                                <th>用户名</th>
                                <th>资源名</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            {allowRules.map((rule, index) => (
                                <tr key={index}>
                                    <td>{rule.username}</td>
                                    <td>{rule.resource_name}</td>
                                    <td><Button variant="danger" size="sm" onClick={() => deleteRule(index)}>删除</Button></td>
                                </tr>
                            ))}
                        </tbody>
                    </Table>
                </Col>
            </Row>

            {/* 提交按钮 */}
            <Row className="mt-4">
                <Col>
                    <Button variant="success" onClick={submitConfig}>提交配置并应用</Button>
                </Col>
            </Row>
        </Container>
    );
}

export default App;

